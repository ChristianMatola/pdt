<project name="Build specific targets and properties" default="noDefault">

	<!-- ===================================================================== -->
	<!-- Run a given ${target} on all elements being built -->
	<!-- Add on <ant> task for each top level element being built. -->
	<!-- ===================================================================== -->
	<target name="allElements">

		<ant antfile="${genericTargets}" target="${target}">
			<property name="type" value="feature" />
			<property name="id" value="org.eclipse.php_feature" />
		</ant>
	</target>

	<!-- ===================================================================== -->
	<!-- Check out map files from correct repository -->
	<!-- Replace values for mapsCheckoutTag as desired. -->
	<!-- ===================================================================== -->
	<target name="getMapFiles" depends="checkLocalMaps" unless="skipMaps">
		<property name="mapsCheckoutTag" value="HEAD" />
		<cvs cvsRoot="${mapsRepo}" package="${mapsRoot}" dest="${buildDirectory}/maps" tag="${mapsCheckoutTag}" />
	</target>

	<target name="checkLocalMaps">
		<available property="skipMaps" file="${buildDirectory}/maps" />
	</target>

	<target name="tagMapFiles" if="tagMaps">
		<cvs dest="${buildDirectory}/maps/${mapsRoot}" command="tag ${mapsTagTag}" />
	</target>

	<!-- ===================================================================== -->

	<target name="clean" unless="noclean">
		<antcall target="allElements">
			<param name="target" value="cleanElement" />
		</antcall>
	</target>

	<target name="gatherLogs">
		<mkdir dir="${buildDirectory}/${buildLabel}/compilelogs" />
		<antcall target="allElements">
			<param name="target" value="gatherLogs" />
		</antcall>
		<unzip dest="${buildDirectory}/${buildLabel}/compilelogs" overwrite="true">
			<fileset dir="${buildDirectory}/features">
				<include name="**/*.log.zip" />
			</fileset>
		</unzip>
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do before setup -->
	<!-- ===================================================================== -->
	<target name="preSetup">
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do after setup but before starting the build proper -->
	<!-- ===================================================================== -->
	<target name="postSetup">
		<ant antfile="${builder}/../dependency.xml">
			<property name="dependency.properties" value="${buildDirectory}/maps/org.eclipse.pdt/plugins/org.eclipse.php-releng/maps/dependencies.properties" />
			<property name="base.install.dir" value="${buildDirectory}/../" />
			<property name="dependencyTargets" value="${builder}/../dependency/build.xml" />
			<property name="local.cache.dir" value="${buildDirectory}/../" />
		</ant>
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do before fetching the build elements -->
	<!-- ===================================================================== -->
	<target name="preFetch">
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do after fetching the build elements -->
	<!-- ===================================================================== -->
	<target name="postFetch">
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do before generating the build scripts. -->
	<!-- ===================================================================== -->
	<target name="preGenerate">
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do after generating the build scripts. -->
	<!-- ===================================================================== -->
	<target name="postGenerate">
		<antcall target="clean" />
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do before running the build.xmls for the elements being built. -->
	<!-- ===================================================================== -->
	<target name="preProcess">
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do after running the build.xmls for the elements being built. -->
	<!-- ===================================================================== -->
	<target name="postProcess">
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do before running assemble. -->
	<!-- ===================================================================== -->
	<target name="preAssemble">
	</target>

	<target name="assemble.org.eclipse.php_feature">
		<ant antfile="${assembleScriptName}" />
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do after  running assemble. -->
	<!-- ===================================================================== -->
	<target name="postAssemble">
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do before running package. -->
	<!-- ===================================================================== -->
	<target name="prePackage">
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do after  running package. -->
	<!-- ===================================================================== -->
	<target name="postPackage">
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do after the build is done. -->
	<!-- ===================================================================== -->
	<target name="postBuild">
		<!-- Not in use
                <antcall target="gatherLogs" />
                -->
		<ant antfile="${builder}/../buildutilities.xml" target="unpackUpdateJarsAndCreateZippedPackages">
			<property name="java-home" value="${vm}" />
		</ant>

		<ant antfile="${builder}/../buildutilities.xml" target="packAllInOne" />
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do to test the build results -->
	<!-- ===================================================================== -->
	<target name="test">

		<!--
		<antcall target="runTest" />


                <mkdir dir="/eclipse-testing" />
                <copy todir="/eclipse-testing"
              overwrite="false">
            <fileset dir="/src/eclipse-SDK.zip" />
        </copy>
-->
	</target>

	<target name="runTest">

		<dirname file="${ant.file}" property="test.component.dir" />
		<ant antfile="${wtp.builder.home}/scripts/build/label.xml" />
		<property file="${buildDirectory}/label.properties" />
		<property file="${wtp.builder.home}/build.properties" />

		<mkdir dir="${testRoot}" />
		<mkdir dir="${testRoot}/results" />
		<mkdir dir="${testRoot}/results/consolelogs" />

		<copy todir="${testRoot}" overwrite="true">
			<fileset dir="${test.component.dir}/testScripts">
			</fileset>
		</copy>

		<echo message="${baseos} ${basews} ${basearch} " />
		<ant antfile="${test.component.dir}/testdependency.xml" target="get">
			<property name="dependency.properties" value="${buildDirectory}/maps/releng/maps/dependencies.properties" />
			<property name="base.install.dir" value="${testRoot}" />
		</ant>
		<unzip dest="${testRoot}" src="${buildDirectory}/${buildLabel}/wtp-${buildLabel}.zip" overwrite="true" />
		<unzip dest="${testRoot}" src="${buildDirectory}/${buildLabel}/wtp-wst-Automated-Tests-${buildLabel}.zip" overwrite="true" />
		<unzip dest="${testRoot}" src="${buildDirectory}/${buildLabel}/wtp-jst-Automated-Tests-${buildLabel}.zip" overwrite="true" />

		<unzip dest="${testRoot}" src="${buildDirectory}/${buildLabel}/wtp-jsf-${buildLabel}.zip" overwrite="true" />
		<unzip dest="${testRoot}" src="${buildDirectory}/${buildLabel}/wtp-jsf-Automated-Tests-${buildLabel}.zip" overwrite="true" />

		<antcall target="runTestEclipse">
			<param name="testTarget" value="all" />
		</antcall>
		<antcall target="postRunTestEclipse">
			<param name="testTarget" value="all" />
		</antcall>

	</target>



	<target name="runTestEclipse">
		<java taskname="test-wtp-${testTarget}" classpath="${testRoot}/eclipse/plugins/org.eclipse.equinox.launcher.jar" fork="true" classname="org.eclipse.core.launcher.Main" failonerror="true" timeout="7200000" output="${testRoot}/results/consolelogs/wtptestlog.txt" dir="${testRoot}">
			<jvmarg value="-Dosgi.ws=${basews}" />
			<jvmarg value="-Dosgi.os=${baseos}" />
			<jvmarg value="-Dosgi.arch=${basearch}" />
			<jvmarg value="-Dws=${basews}" />
			<jvmarg value="-Dos=${baseos}" />
			<jvmarg value="-Darch=${basearch}" />
			<jvmarg value="-Dnoclean=true" />
			<jvmarg value="-DbuildBranch=${buildBranch}" />
			<jvmarg value="-DbuildType=${buildType}" />
			<jvmarg value="-DbuildId=${buildId}" />
			<jvmarg value="-DbuildLabel=${buildLabel}" />
			<arg value="-propertyfile" />
			<arg value="test.properties" />
			<arg value="-application" />
			<arg value="org.eclipse.ant.core.antRunner" />
			<arg value="-file" />
			<arg value="test.xml" />
			<arg value="-logger" />
			<arg value="org.apache.tools.ant.DefaultLogger" />
			<arg value="${testTarget}" />
			<sysproperty key="build.home" value="${build.home}" />
			<sysproperty key="buildDirectory" value="${buildDirectory}" />
			<sysproperty key="baseLocation" value="${baseLocation}" />
			<sysproperty key="testDir" value="${testRoot}" />
			<sysproperty key="perf.buildId" value="${buildType}${date}-${time}" />
			<sysproperty key="eclipseBuilderDirectory" value="${pde.builder.path}" />
		</java>
	</target>

	<target name="postRunTestEclipse">
		<copy todir="${buildDirectory}/${buildLabel}/testResults" overwrite="true">
			<fileset dir="${testRoot}/results">
				<include name="**/*.*" />
			</fileset>
		</copy>
	</target>

	<!-- ===================================================================== -->
	<!-- Steps to do to publish the build results -->
	<!-- ===================================================================== -->
	<target name="publish">


	</target>

	<!-- ===================================================================== -->
	<!-- Default target                                                        -->
	<!-- ===================================================================== -->
	<target name="noDefault">
		<echo message="You must specify a target when invoking this file" />
	</target>

</project>
